{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ##  Code sequence\
\
1. baseline.py can be used to calculate the optimal demand reduction on daily demand profiles\
\
2. baseline_constraint.R can be used to calculate the optimal demand reduction on daily demand profiles given the binary output constraint \
\
3. energy_demand_clusters.R can be run to plot the visualisations of the energy demand profiles and find the energy demand clusters\
\
4. rl_energy_demand.py trains and test an RL agents on an energy demand cluster\
\
5. rl_energy_demand_temp.py trains and test an RL agent with temperature in its state space on an energy demand cluster\
\
6. incomer_clusters.Rmd can be run to find the grid demand clusters\
\
7. rl_grid_demand.py trains and tests an RL agent on grid demand profiles (i.e with a solar system installed in the environment)\
\
8. The results folder contains excel spreadsheets which document the results and calculate the monthly demand reductions the agents and optimal outputs were able to derive}